---
- name: check for supported OS
  assert:
    that:
      - "ansible_os_family == 'Debian'"

- name: include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: install Minecraft dependencies
  apt:
    name={{ item }}
    state=present
  with_items: dependencies

- name: create Minecraft group
  group:
    state=present
    name={{ minecraft_group }}
    system=yes

- name: create Minecraft user
  user:
    state=present
    name={{ minecraft_user }}
    group={{ minecraft_group }}
    home={{ minecraft_home }}

- include: supervisor.yml
  when: minecraft_process_control == 'supervisor'

- include: systemd.yml
  when: minecraft_process_control == 'systemd'

- name: download Minecraft server
  get_url:
    url={{ minecraft_url }}/{{ minecraft_version }}/minecraft_server.{{ minecraft_version }}.jar
    dest={{ minecraft_home }}/minecraft_server.{{ minecraft_version }}.jar
    owner={{ minecraft_user }}
    group={{ minecraft_group }}
    mode=0755

- name: symlink Minecraft server
  file:
    src={{ minecraft_home }}/minecraft_server.{{ minecraft_version }}.jar
    path={{ minecraft_home }}/minecraft_server.jar
    owner={{ minecraft_user }}
    group={{ minecraft_group }}
    state=link
  notify:
    - restart Minecraft ({{ minecraft_process_control }})

- name: agree to EULA
  copy:
    src=eula.txt
    dest={{ minecraft_home }}/eula.txt
    mode=0644
    owner={{ minecraft_user }}
    group={{ minecraft_group }}
  notify:
    - enable service ({{ minecraft_process_control }})

- include: acl.yml
    list=whitelist
    data={{ minecraft_whitelist }}
  when: "minecraft_whitelist"

- include: acl.yml
    list=ops
    data={{ minecraft_ops }}
  when: "minecraft_ops"

- include: acl.yml
    list=banned-players
    data={{ minecraft_banned_players }}
  when: "minecraft_banned_players"

- include: acl.yml
    list=banned-ips
    data={{ minecraft_banned_ips }}
  when: "minecraft_banned_ips"
